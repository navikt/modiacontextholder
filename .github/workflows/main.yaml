name: Build, push, and deploy

on: [push]

concurrency:
  group: main-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/modiacontextholder:${{ github.sha }}
  CI: true
  TZ: Europe/Oslo
  Q1_TEST_BRANCH: 'refs/heads/fix/cors-security'

jobs:
  build:
    name: Test and build
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Build using maven
        run: |
          mvn -P ci -B verify

  build-and-push:
    name: Build and push Docker container
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master' || github.ref == ${{ env.Q1_TEST_BRANCH }}
    env:
      TZ: Europe/Oslo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}
      - name: Deploy test branch to Q1
        uses: nais/deploy/actions/deploy@v1
        if: github.ref == env.Q1_TEST_BRANCH
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: .nais/qa-template.yaml
          VAR: namespace=q1

  deploy-qa:
    name: Deploy to preprod
    needs: build-and-push
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        namespace: [q0, q1]
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: .nais/qa-template.yaml
          VAR: namespace=${{matrix.namespace}}

  deploy-prod:
    name: Deploy to prod
    needs: build-and-push
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD : true
          CLUSTER: prod-fss
          RESOURCE: .nais/nais.yaml
